name: CMake

on:
  label:
    types:
      - created
      - edited
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo


jobs:

# ====================================================================
  build:
    runs-on: macos-latest

    steps:
    # ---------------------------------------------------------------
    - name: checkout
      uses: actions/checkout@v3
    # ---------------------------------------------------------------
    - name: Install nlopt
      run: |
        which vcpkg
        # ls -l /usr/local/share/vcpkg
        # find /usr -type f -iname vcpkg.cmake
        ls -l                /usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        CMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake vcpkg install nlopt
    # ---------------------------------------------------------------
#    - name: Configure CMake
#      run: |
#        echo "Configure CMake"
#        mkdir -p ${{github.workspace}}/build
#        ls -l /usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
#        # cd       ${{github.workspace}}/build
#        CMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
#        echo "Configure CMake completed?"
#
## =========================================
##
## =========================================
##    - name: Install vcpkg
##      run: |
##        brew update
##        # brew vcpkg
##
#    - name: Install NLOPT
#      run: |
#        echo "vcpkg install nlopt"
#        mkdir -p ${{github.workspace}}/VcPkg
#        cd       ${{github.workspace}}/VcPkg
#        git clone https://github.com/microsoft/vcpkg
#        cd       ${{github.workspace}}/VcPkg/vcpkg
#        ${{github.workspace}}/VcPkg/vcpkg/bootstrap-vcpkg.sh
#        ${{github.workspace}}/VcPkg/vcpkg/vcpkg install nlopt
#    # ---------------------------------------------------------------
#    - name: Configure CMake for nloptwr
#      run: |
#        echo "Configure CMake"
#        CMAKE_TOOLCHAIN_FILE=${{github.workspace}}/VcPkg/vcpkg/scripts/buildsystems/vcpkg.cmake cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
#        echo "Configure CMake completed?"
#
#    # ---------------------------------------------------------------
#    - name: Build
#      run: |
#           echo "Find nlopt.hpp"
#           # find / -type f -iname nlopt.hpp 2> /dev/null
#           echo "TODO: Build"
#           cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#    # ---------------------------------------------------------------
#    - name: Test
#      run: |
#        mkdir -p ${{github.workspace}}/build
#        cd       ${{github.workspace}}/build
#        ctest -C ${{env.BUILD_TYPE}}
#
# ====================================================================
#
#  build:
#    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
#    # You can convert this to a matrix build if you need cross-platform coverage.
#    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
#    runs-on: macos-latest
#
#    steps:
#    - name: checkout
#      uses: actions/checkout@v3
#
#    - name: Install vcpkg
#      run: |
#        brew update
#        # brew vcpkg
#
#    - name: Install NLOPT
#      run: |
#        echo "vcpkg install nlopt"
#        # xcode-select --install
#        mkdir -p ${{github.workspace}}/VcPkg
#        cd       ${{github.workspace}}/VcPkg
#        git clone https://github.com/microsoft/vcpkg
#        cd       ${{github.workspace}}/VcPkg/vcpkg
#        ${{github.workspace}}/VcPkg/vcpkg/bootstrap-vcpkg.sh
#        ${{github.workspace}}/VcPkg/vcpkg/vcpkg install nlopt
#
#    - name: Configure CMake
#      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
#      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
#      run: |
#        echo "Configure CMake"
#        CMAKE_TOOLCHAIN_FILE=${{github.workspace}}/VcPkg/vcpkg/scripts/buildsystems/vcpkg.cmake cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
#        echo "Configure CMake completed?"
#
#    - name: Build
#      run: |
#           echo "Find nlopt.hpp"
#           # find / -type f -iname nlopt.hpp 2> /dev/null
#           echo "TODO: Build"
#           cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
#
#    - name: Test
#      run: |
#        mkdir -p ${{github.workspace}}/build
#        cd       ${{github.workspace}}/build
#        ctest -C ${{env.BUILD_TYPE}}
#
