---
name: Build and Test
on:
  push:
    branches: [dev2]
  pull_request:
    branches: [dev2]
#  schedule:
#    - cron:  '0 0 * * 0' # weekly

# =============================================================================

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu-latest,macos-latest,windows-latest]
        os: [ubuntu-latest]
        shared_libs: ['OFF']
        include:
          - os: ubuntu-latest
            triplet: 'x64-linux'
            CMAKE_BUILD_TYPE: Release
          - os: macos-latest
            triplet: 'x64-osx'
            CMAKE_BUILD_TYPE: Release
          - os: windows-latest
            triplet: 'x64-windows'
            CMAKE_BUILD_TYPE: Release
    steps:

# =============================================================================

      - name: Check out repository code
        uses: actions/checkout@v2

      - name: "Git clone NLopt"
        run: |
          echo "Git clone NLopt"
          mkdir ${{github.workspace}}/tmp
          cd    ${{github.workspace}}/tmp
          git clone https://github.com/stevengj/nlopt.git
          # ${{github.workspace}}/tmp/nlopt
          echo "Git clone NLopt done"
 
      - name: "Prepare NLopt (ubuntu)"
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          echo "Configure NLopt for ubuntu"
          mkdir -p ${{github.workspace}}/install
          mkdir -p ${{github.workspace}}/build
          echo "# 1.) build directory created"
          cd     ${{github.workspace}}/build
          echo "# 2.) Configuring CMake for NLopt ..."
          cmake -DBUILD_SHARED_LIBS=OFF -DNLOPT_CXX=ON -DNLOPT_FORTRAN=OFF -DNLOPT_PYTHON=OFF -DNLOPT_GUILE=OFF -DNLOPT_SWIG=OFF -DNLOPT_OCTAVE=OFF -DNLOPT_MATLAB=OFF -DNLOPT_TESTS=OFF -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -H${{github.workspace}}/tmp/nlopt
          cmake --build . --target install
          echo "config done"

      - name: "Prepare NLopt (mac)"
        if: ${{ contains(matrix.os, 'macos') }}
        run: |
          echo "Configure NLoptWr for macos"
          brew install llvm libomp
          sudo ln -s /usr/local/opt/llvm/bin/clang    /usr/local/bin/clang-omp
          sudo ln -s /usr/local/opt/llvm/bin/clang++  /usr/local/bin/clang-omp++
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> /Users/runner/.bash_profile
          export CC=/usr/local/bin/clang-omp
          export CXX=/usr/local/bin/clang-omp++
          export CPPFLAGS="-I/usr/local/opt/llvm/include"
          export CXXFLAGS="-I/usr/local/opt/llvm/include"
          # export LDFLAGS="-L/usr/local/opt/llvm/lib"
          export LDFLAGS="-L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++"
          rm -rf   ${{github.workspace}}/build 
          mkdir -p ${{github.workspace}}/install
          mkdir -p ${{github.workspace}}/build
          echo "# 1.) build directory created"
          cd     ${{github.workspace}}/build
          echo "# 2.) Configuring CMake for NLopt ..."
          cmake -DBUILD_SHARED_LIBS=OFF -DNLOPT_CXX=ON -DNLOPT_FORTRAN=OFF -DNLOPT_PYTHON=OFF -DNLOPT_GUILE=OFF -DNLOPT_SWIG=OFF -DNLOPT_OCTAVE=OFF -DNLOPT_MATLAB=OFF -DNLOPT_TESTS=OFF -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -H${{github.workspace}}/tmp/nlopt
          cmake --build . --target install
          echo "config done"

      - name: "Prepare NLopt (windows)"
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          echo "Configure NLoptWr for windows"
          mkdir -p ${{github.workspace}}\install
          mkdir -p ${{github.workspace}}\build
          echo "# 1.) build directory created"
          cd     ${{github.workspace}}\build
          echo "# 2.) Configuring CMake for NLopt ..."
          cmake -DBUILD_SHARED_LIBS=OFF -DNLOPT_CXX=ON -DNLOPT_FORTRAN=OFF -DNLOPT_PYTHON=OFF -DNLOPT_GUILE=OFF -DNLOPT_SWIG=OFF -DNLOPT_OCTAVE=OFF -DNLOPT_MATLAB=OFF -DNLOPT_TESTS=OFF -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -H${{github.workspace}}/tmp/nlopt
          cmake --build . --target install
          echo "config done"

# =============================================================================

      - name: "Prepare NLoptWr (ubuntu)"
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          echo "Configure NLoptWr (ubuntu)"
          mkdir -p  ${{github.workspace}}/install
          mkdir -p  ${{github.workspace}}/build
          rm    -rf ${{github.workspace}}/build/* 
          echo "# 1.) build directory created"
          mkdir -p ${{github.workspace}}/build
          cd ${{github.workspace}}/build
          echo "# 2.) Configuring CMake for NLOptWr ..."
          cmake -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_BUILD_TYPE=Release -H${{github.workspace}} 
          cmake --build . --config Release --target install
          echo "config done"

      - name: "Prepare NLoptWr (macos)"
        if: ${{ contains(matrix.os, 'macos') }}
        run: |
          echo "Configure NLoptWr for macos"
          export CC=/usr/local/bin/clang-omp
          export CXX=/usr/local/bin/clang-omp++
          export CPPFLAGS="-I/usr/local/opt/llvm/include"
          export CXXFLAGS="-I/usr/local/opt/llvm/include"
          export LDFLAGS="-L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++"
          export OpenMP_C=${CC}
          export OpenMP_CXX=${CXX}
          export OpenMP_C_FLAGS="-fopenmp=libomp -Wno-unused-command-line-argument"
          export OpenMP_C_LIB_NAMES="libomp libgomp libiomp5"
          mkdir -p ${{github.workspace}}/install
          mkdir -p ${{github.workspace}}/build
          rm -rf   ${{github.workspace}}/build/*
          echo "# 1.) build directory created"
          cd       ${{github.workspace}}/build
          echo "# 2.) Configuring CMake for NLOptWr ..."
          cmake -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_BUILD_TYPE=Release -H${{github.workspace}} 
          cmake --build . --config Release --target install
          echo "config done"

      - name: "Prepare NLoptWr (windows)"
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          echo "Configure NLoptWr for windows"
          remove-item "${{github.workspace}}\build" -recurse -force
          mkdir   ${{github.workspace}}\build
          echo "# 1.) build directory created"
          cd ${{github.workspace}}\build
          echo "# 2.) Configuring CMake for NLOptWr ..."
          cmake -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_BUILD_TYPE=Release -H${{github.workspace}} 
          cmake --build . --config Release --target install
          echo "config done"

      - name: "Build NLoptWr (lib)"
        run: |
          echo "Build starting"
          # cmake --build ${{github.workspace}}/build --config Release --target install
          echo "Build done"

      - name: "Test NLoptWr"
        run: |
          echo "Test starting"
          ctest ${{github.workspace}}/build -C Release
          echo "Test done"

# ===============================================================
# ===============================================================

      - name: "Prepare external test (ubuntu)"
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          echo "Configure NLoptWr for ubuntu"
          mkdir -p ${{github.workspace}}/install
          mkdir -p ${{github.workspace}}/build
          rm -rf   ${{github.workspace}}/build/*
          echo "# 1.) build directory created"
          cd ${{github.workspace}}/build
          echo "# 2.) Configuring CMake for NLOptWr ..."
          cmake -Wno-dev -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_BUILD_TYPE=Release -H${{github.workspace}}/examples/example01
          cmake --build ${{github.workspace}}/build
          echo "config done"

      - name: "Prepare external test (macos)"
        if: ${{ contains(matrix.os, 'macos') }}
        run: |
          echo "Configure NLoptWr for macos"
          export CC=/usr/local/bin/clang-omp
          export CXX=/usr/local/bin/clang-omp++
          export CPPFLAGS="-I/usr/local/opt/llvm/include"
          export CXXFLAGS="-I/usr/local/opt/llvm/include"
          export LDFLAGS="-L/usr/local/opt/llvm/lib"
          export OpenMP_C=${CC}
          export OpenMP_CXX=${CXX}
          export OpenMP_C_FLAGS="-fopenmp=libomp -Wno-unused-command-line-argument"
          export OpenMP_C_LIB_NAMES="libomp libgomp libiomp5"
          mkdir -p ${{github.workspace}}/install
          mkdir -p ${{github.workspace}}/build
          rm -rf   ${{github.workspace}}/build/*
          echo "# 1.) build directory created"
          cd       ${{github.workspace}}/build
          echo "# 2.) Configuring CMake for NLOptWr ..."
          cmake -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_BUILD_TYPE=Release -H${{github.workspace}}/examples/example01
          cmake --build ${{github.workspace}}/build
          echo "config done"

      - name: "Prepare external test (windows)"
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          echo "Configure NLoptWr for windows"
          # rmdir "${{github.workspace}}\build" /s /q
          # DEL "${{github.workspace}}\build\*" /S
          remove-item "${{github.workspace}}\build" -recurse -force
          mkdir ${{github.workspace}}\build
          echo "# 1.) build directory created"
          cd ${{github.workspace}}\build
          echo "# 2.) Configuring CMake for NLOptWr ..."
          cmake -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_BUILD_TYPE=Release -H${{github.workspace}}/examples/example01
          cmake --build ${{github.workspace}}/build
          echo "config done"

# ===============================================================
# ===============================================================

      - name: "External test"
        run: |
          echo "TODO ... "
          ctest -B ${{github.workspace}}/build -C release
          
### #! /bin/bash
### export    GITHUB_DIR=$HOME/GitHub
### export    NLOPT_DIR=$GITHUB_DIR/nlopt
### export    BUILD_DIR1=$HOME/GitHub/nlopt/build
### export    BUILD_DIR=$HOME/GitHub/nloptwr/build
### export    INST_DIR=$HOME/install
### unset CMAKE_TOOLCHAIN_FILE
### unset VCPKG_ROOT
### 
### rm -rf $NLOPT_DIR
### cd $GITHUB_DIR
### git clone git@github.com:stevengj/nlopt.git
### mkdir -p  $BUILD_DIR1
### mkdir -p  $BUILD_DIR
### mkdir -p  $INST_DIR
### rm    -rf $BUILD_DIR1/*
### rm    -rf $BUILD_DIR/*
### rm    -rf $INST_DIR/*
### #
### # NLopt 
### cd $BUILD_DIR1
### echo "NLopt: pwd=`pwd`"
### cmake -DBUILD_SHARED_LIBS=OFF -DNLOPT_CXX=ON -DNLOPT_FORTRAN=OFF -DNLOPT_PYTHON=OFF -DNLOPT_GUILE=OFF -DNLOPT_SWIG=OFF -DNLOPT_OCTAVE=OFF -DNLOPT_MATLAB=OFF -DNLOPT_TESTS=OFF -Wno-dev -DCMAKE_PREFIX_PATH=$INST_DIR -DCMAKE_INSTALL_PREFIX=$INST_DIR .. && cmake --build . -j 4 --target install
### rm -rf $NLOPT_DIR
### #
### # NLoptWr
### cd $BUILD_DIR 
### echo "NLoptWr: pwd=`pwd`"
### cmake -Wno-dev -DCMAKE_PREFIX_PATH=$INST_DIR -DCMAKE_INSTALL_PREFIX=$INST_DIR .. && cmake --build . -j 4 --target install && cmake --build . --target clangformat && cmake --build . --target cppcheck && cpack && ctest 
### ls -l
### echo "Fertig"
### 
### #! /bin/bash
### 
### export    SRC_DIR="$HOME/GitHub/nloptwr/examples/example01"
### export    BUILD_DIR=$HOME/_build/example01
### export    INST_DIR=$HOME/install
### unset CMAKE_TOOLCHAIN_FILE
### unset VCPKG_ROOT
### mkdir -p  $BUILD_DIR
### mkdir -p  $INST_DIR
### rm    -rf $BUILD_DIR/*
### ls -l $SRC_DIR
### ### rm -f $INST_DIR/include/nloptwr* $INST_DIR/lib/libnloptwr*.a $INST_DIR/lib/cmake/nloptwr*
### ### rm    -rf $INST_DIR/* 
### cd        $BUILD_DIR 
### echo "pwd=$(pwd)"
### echo "BUILD_DIR=$BUILD_DIR"
### echo "SRC_DIR=$SRC_DIR"
### echo "cmake -Wno-dev -DCMAKE_PREFIX_PATH=$INST_DIR -DCMAKE_INSTALL_PREFIX=$INST_DIR -H$SRC_DIR -B$BUILD_DIR"
### cmake -Wno-dev -DCMAKE_PREFIX_PATH=$INST_DIR -DCMAKE_INSTALL_PREFIX=$INST_DIR -H$SRC_DIR -B$BUILD_DIR  && cmake --build $BUILD_DIR -j 4  && ctest 
### ls -l $BUILD_DIR
### 
