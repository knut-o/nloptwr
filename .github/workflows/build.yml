---
name: Build and Test
on:
  push:
    branches: [dev2]
  pull_request:
    branches: [dev2]
#  schedule:
#    - cron:  '0 0 * * 0' # weekly
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu-latest, macos-latest,windows-latest]
        os: [ubuntu-latest]
        shared_libs: ['OFF']
        include:
          - os: ubuntu-latest
            triplet: 'x64-linux'
            CMAKE_BUILD_TYPE: Release
          - os: macos-latest
            triplet: 'x64-osx'
            CMAKE_BUILD_TYPE: Release
          - os: windows-latest
            triplet: 'x64-windows'
            CMAKE_BUILD_TYPE: Release
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: "Build NLopt"
        run: |
          echo "Build NLopt"
          echo "# 1a.) Configuring VCPKG ..."
          vcpkg install

      - name: "prepare NLoptWr (macos)"
        if: ${{ contains(matrix.os, 'macos') }}
        run: |
          echo "Configure NLoptWr for macos"
          brew install llvm libomp
          sudo ln -s /usr/local/opt/llvm/bin/clang    /usr/local/bin/clang-omp
          sudo ln -s /usr/local/opt/llvm/bin/clang++  /usr/local/bin/clang-omp++
          export CC=/usr/local/bin/clang-omp
          export CXX=/usr/local/bin/clang-omp++
          export CPPFLAGS="-I/usr/local/opt/llvm/include"
          export CXXFLAGS="-I/usr/local/opt/llvm/include"
          export LDFLAGS="-L/usr/local/opt/llvm/lib"
          export OpenMP_C=${CC}
          export OpenMP_CXX=${CXX}
          export OpenMP_C_FLAGS="-fopenmp=libomp -Wno-unused-command-line-argument"
          export OpenMP_C_LIB_NAMES="libomp libgomp libiomp5"
          export CMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
          export VCPKG_DEFAULT_TRIPLET=x64-osx
          export VCPKG_TRIPLET=x64-osx
          mkdir -p ${{github.workspace}}/install
          mkdir -p ${{github.workspace}}/build
          echo "# 1.) build directory created"
          cd       ${{github.workspace}}/build
          echo "# 2.) Configuring CMake for NLOptWr ..."
          cmake -DCMAKE_TOOLCHAIN_FILE=[vcpkg-root]/scripts/buildsystems/vcpkg.cmake -DNLOPTWR_BUILD_EXAMPLES=OFF -DNLOPTWR_BUILD_TESTS=OFF -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_BUILD_TYPE=Release -H${{github.workspace}} 
          echo "config done"

      - name: "prepare NLoptWr (ubuntu)"
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          echo "Configure NLoptWr for ubuntu"

      - name: "prepare NLoptWr (windows)"
        if: ${{ contains(matrix.os, 'windows') }}
        run: |
          echo "Configure NLoptWr for windows"
          mkdir ${{github.workspace}}\build
          echo "# 1.) build directory created"
          cd ${{github.workspace}}\build
          echo "# 2.) Configuring CMake for NLOptWr ..."
          $env:CMAKE_TOOLCHAIN_FILE="[vcpkg root]/scripts/buildsystems/vcpkg.cmake"
          cmake -DCMAKE_TOOLCHAIN_FILE="[vcpkg-root]/scripts/buildsystems/vcpkg.cmake" -DNLOPTWR_BUILD_EXAMPLES=OFF -DNLOPTWR_BUILD_TESTS=OFF -Wno-dev -DCMAKE_PREFIX_PATH=${{github.workspace}}/install -DCMAKE_BUILD_TYPE=Release -H${{github.workspace}} 
          echo "config done"

      - name: "TODO"
        run: |
          echo "TODO ... "
          

